{
  "name": "pool_stream",
  "version": "0.0.2",
  "description": "Pool Stream",
  "main": "index.js",
  "scripts": {
    "test": "make test"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/JacksonTian/pool.git"
  },
  "keywords": [
    "Pool",
    "Stream"
  ],
  "config": {
    "blanket": {
      "pattern": "pool_stream/lib",
      "data-cover-flags": {
        "debug": false
      }
    },
    "travis-cov": {
      "threshold": 98
    }
  },
  "author": {
    "name": "Jackson Tian"
  },
  "license": "MIT",
  "bugs": {
    "url": "https://github.com/JacksonTian/pool/issues"
  },
  "homepage": "https://github.com/JacksonTian/pool",
  "readme": "Pool Stream\n============\nIt's like a pool. Upstream can fast pipe into it, and don't depend on the downstream.\n\n## Installation\n\n```bash\n$ npm install pool_stream\n```\n\n## Usage\nYou can pipe it like other streams.\n\n```js\nvar PoolStream = require('pool_stream');\n\nvar readable = fs.createReadStream('a_file');\nvar pool = new PoolStream();\nvar writable = fs.createWriteStream('b_file');\n\nreadable.pipe(pool).pipe(writable);\n\n// following events will tell you why need pool.\nreadable.on('end', function () {\n  console.log('readable end time is: %s', new Date());\n});\npool.on('end', function () {\n  console.log('pool end time is: %s', new Date());\n});\npool.on('finish', function () {\n  console.log('pool finish time is: %s', new Date());\n});\nwritable.on('finish', function () {\n  console.log('writable finish time is: %s', new Date());\n});\n```\n\n## License\nThe MIT license.\n",
  "readmeFilename": "README.md",
  "_id": "pool_stream@0.0.2",
  "_from": "pool_stream@0.0.2"
}
